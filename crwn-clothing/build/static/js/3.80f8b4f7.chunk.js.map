{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/form-input/form-input.component.jsx","components/sign-in/sign-in.component.jsx","components/sign-up/sign-up.component.jsx","pages/sign-in-and-sign-up/sign-in-and-sign-up.component.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","FormInput","handleChange","label","otherProps","className","onChange","SignIn","dispatch","useDispatch","emailSignIn","email","password","emailSignInStart","useState","credentials","setCredentials","handleSubmit","e","a","preventDefault","target","name","onSubmit","type","autoComplete","required","onClick","googleSignInStart","isGoogleSignIn","SignUp","displayName","confirmPassword","alert","userCredentials","signUpStart","SignInAndSignUpPage"],"mappings":"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","file":"static/js/3.80f8b4f7.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from \"react\";\n\nimport \"./form-input.styles.scss\";\n\nconst FormInput = ({ handleChange, label, ...otherProps }) => {\n\treturn (\n\t\t<div className=\"group\">\n\t\t\t<input className=\"form-input\" onChange={handleChange} {...otherProps} />\n\t\t\t{label ? (\n\t\t\t\t<label\n\t\t\t\t\tclassName={`${\n\t\t\t\t\t\totherProps.value.length ? \"shrink \" : \"\"\n\t\t\t\t\t}form-input-label`}\n\t\t\t\t>\n\t\t\t\t\t{label}\n\t\t\t\t</label>\n\t\t\t) : null}\n\t\t</div>\n\t);\n};\n\nexport default FormInput;\n","import React, { useState } from \"react\";\n// import { auth, signInWithGoogle } from \"../../firebase/firebase.utils\";\nimport { useDispatch } from \"react-redux\";\nimport {\n\tgoogleSignInStart,\n\temailSignInStart,\n} from \"../../redux/user/user.actions\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport FormInput from \"../form-input/form-input.component\";\n\nimport \"./sign-in.styles.scss\";\n\nconst SignIn = () => {\n\tconst dispatch = useDispatch();\n\n\tconst googleSignIn = () => dispatch(googleSignInStart());\n\tconst emailSignIn = (email, password) =>\n\t\tdispatch(emailSignInStart({ email, password }));\n\n\tconst [credentials, setCredentials] = useState({\n\t\temail: \"init@user.com\",\n\t\tpassword: \"asdqwe\",\n\t});\n\n\tconst handleSubmit = async (e) => {\n\t\te.preventDefault();\n\n\t\tconst { email, password } = credentials;\n\n\t\temailSignIn(email, password);\n\t\t// try {\n\t\t// \tawait auth.signInWithEmailAndPassword(email, password);\n\t\t// \tsetCredentials({ ...credentials, email: \"\", password: \"\" });\n\t\t// } catch (err) {\n\t\t// \tconsole.log(err);\n\t\t// }\n\t};\n\n\tconst handleChange = (e) => {\n\t\tconst { value, name } = e.target;\n\n\t\tsetCredentials({ ...credentials, [name]: value });\n\t};\n\n\treturn (\n\t\t<div className=\"sign-in\">\n\t\t\t<h2 className=\"title\">I already have an account</h2>\n\t\t\t<span>Sign in with your email and password</span>\n\n\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t<FormInput\n\t\t\t\t\ttype=\"email\"\n\t\t\t\t\tname=\"email\"\n\t\t\t\t\tautoComplete=\"email\"\n\t\t\t\t\tvalue={credentials.email}\n\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<FormInput\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tname=\"password\"\n\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\tvalue={credentials.password}\n\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<div className=\"buttons\">\n\t\t\t\t\t<CustomButton type=\"submit\" value=\"Submit Form\">\n\t\t\t\t\t\tSign In\n\t\t\t\t\t</CustomButton>\n\t\t\t\t\t<CustomButton type=\"button\" onClick={googleSignIn} isGoogleSignIn>\n\t\t\t\t\t\tSign In with Google\n\t\t\t\t\t</CustomButton>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n\nexport default SignIn;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\n// import { auth, createUserProfileDocument } from \"../../firebase/firebase.utils\";\n\nimport { signUpStart } from \"../../redux/user/user.actions\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport FormInput from \"../form-input/form-input.component\";\n\nimport \"./sign-up.styles.scss\";\n\nconst SignUp = () => {\n\tconst dispatch = useDispatch();\n\tconst signUp = (userCredentials) => dispatch(signUpStart(userCredentials));\n\tconst [credentials, setCredentials] = useState({\n\t\tdisplayName: \"\",\n\t\temail: \"\",\n\t\tpassword: \"\",\n\t\tconfirmPassword: \"\",\n\t});\n\n\tconst handleSubmit = async (e) => {\n\t\te.preventDefault();\n\t\tconst { displayName, email, password, confirmPassword } = credentials;\n\n\t\tif (password !== confirmPassword) {\n\t\t\talert(\"Passwords do not match\");\n\t\t\treturn;\n\t\t}\n\n\t\tsignUp({ displayName, email, password });\n\t};\n\n\tconst handleChange = (e) => {\n\t\tconst { name, value } = e.target;\n\n\t\tsetCredentials({ ...credentials, [name]: value });\n\t};\n\n\tconst { displayName, email, password, confirmPassword } = credentials;\n\treturn (\n\t\t<div className=\"sign-up\">\n\t\t\t<h2 className=\"title\">I do not have an account</h2>\n\t\t\t<span>Sign up with your email and password</span>\n\t\t\t<form className=\"sign-up-form\" onSubmit={handleSubmit}>\n\t\t\t\t<FormInput\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"displayName\"\n\t\t\t\t\tvalue={displayName}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tlabel=\"Display Name\"\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<FormInput\n\t\t\t\t\ttype=\"email\"\n\t\t\t\t\tname=\"email\"\n\t\t\t\t\tvalue={email}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<FormInput\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tname=\"password\"\n\t\t\t\t\tvalue={password}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<FormInput\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tname=\"confirmPassword\"\n\t\t\t\t\tvalue={confirmPassword}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tlabel=\"ConfirmPassword\"\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<CustomButton type=\"submit\">SIGN UP</CustomButton>\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n\nexport default SignUp;\n\n//// NORMAL SIGN UP\n\n// try {\n// \tconst { user } = await auth.createUserWithEmailAndPassword(\n// \t\temail,\n// \t\tpassword\n// \t);\n\n// \tawait createUserProfileDocument(user, { displayName });\n\n// \tsetCredentials({\n// \t\t...credentials,\n// \t\tdisplayName: \"\",\n// \t\temail: \"\",\n// \t\tpassword: \"\",\n// \t\tconfirmPassword: \"\",\n// \t});\n// } catch (err) {\n// \tconsole.error(err);\n// }\n","import React from \"react\";\nimport SignIn from \"../../components/sign-in/sign-in.component\";\nimport SignUp from \"../../components/sign-up/sign-up.component\";\nimport \"./sign-in-and-sign-up.styles.scss\";\n\nconst SignInAndSignUpPage = () => {\n\treturn (\n\t\t<div className=\"sign-in-and-sign-up\">\n\t\t\t<SignIn />\n\t\t\t<SignUp />\n\t\t</div>\n\t);\n};\n\nexport default SignInAndSignUpPage;\n"],"sourceRoot":""}