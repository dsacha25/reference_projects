{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyALbZkitP7-lfOBRJQuYdC9_z0lmRXDTmY\",\n  authDomain: \"crwn-db-cfbc4.firebaseapp.com\",\n  databaseURL: \"https://crwn-db-cfbc4.firebaseio.com\",\n  projectId: \"crwn-db-cfbc4\",\n  storageBucket: \"crwn-db-cfbc4.appspot.com\",\n  messagingSenderId: \"248921421873\",\n  appId: \"1:248921421873:web:4ada62056ad82ea4b8fd10\"\n};\nexport const createUserProfileDocument = async (userAuth, additonalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapshot = await userRef.get();\n  console.log(snapshot);\n\n  if (!snapshot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additonalData\n      });\n    } catch (err) {\n      console.log(\"Error creating user\", err.message);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  }); // await batch.commit()\n}; // Initialize Firebase\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/mymac/Documents/code_Projects/rw-projects/crwn-clothing/src/firebase/firebase.utils.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","createUserProfileDocument","userAuth","additonalData","userRef","firestore","doc","uid","snapshot","get","console","log","exists","displayName","email","createdAt","Date","set","err","message","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,cAAc,GAAG;AACtBC,EAAAA,MAAM,EAAE,yCADc;AAEtBC,EAAAA,UAAU,EAAE,+BAFU;AAGtBC,EAAAA,WAAW,EAAE,sCAHS;AAItBC,EAAAA,SAAS,EAAE,eAJW;AAKtBC,EAAAA,aAAa,EAAE,2BALO;AAMtBC,EAAAA,iBAAiB,EAAE,cANG;AAOtBC,EAAAA,KAAK,EAAE;AAPe,CAAvB;AAUA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,aAAjB,KAAmC;AAC3E,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AAEA,MAAI,CAACA,QAAQ,CAACI,MAAd,EAAsB;AACrB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBZ,QAA/B;AACA,UAAMa,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACH,YAAMZ,OAAO,CAACa,GAAR,CAAY;AACjBJ,QAAAA,WADiB;AAEjBC,QAAAA,KAFiB;AAGjBC,QAAAA,SAHiB;AAIjB,WAAGZ;AAJc,OAAZ,CAAN;AAMA,KAPD,CAOE,OAAOe,GAAP,EAAY;AACbR,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCO,GAAG,CAACC,OAAvC;AACA;AACD;;AAED,SAAOf,OAAP;AACA,CA1BM;AA4BP,OAAO,MAAMgB,yBAAyB,GAAG,OACxCC,aADwC,EAExCC,YAFwC,KAGpC;AACJ,QAAMC,aAAa,GAAGlB,SAAS,CAACmB,UAAV,CAAqBH,aAArB,CAAtB;AAEA,QAAMI,KAAK,GAAGpB,SAAS,CAACoB,KAAV,EAAd;AAEAH,EAAAA,YAAY,CAACI,OAAb,CAAsBC,GAAD,IAAS;AAC7B,UAAMC,SAAS,GAAGL,aAAa,CAACjB,GAAd,EAAlB;AAEAmB,IAAAA,KAAK,CAACR,GAAN,CAAUW,SAAV,EAAqBD,GAArB;AACA,GAJD,EALI,CAWJ;AACA,CAfM,C,CAiBP;;AACAnC,QAAQ,CAACqC,aAAT,CAAuBpC,cAAvB;AAEA,OAAO,MAAMqC,IAAI,GAAGtC,QAAQ,CAACsC,IAAT,EAAb;AACP,OAAO,MAAMzB,SAAS,GAAGb,QAAQ,CAACa,SAAT,EAAlB;AAEP,MAAM0B,QAAQ,GAAG,IAAIvC,QAAQ,CAACsC,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAevC,QAAf","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst firebaseConfig = {\n\tapiKey: \"AIzaSyALbZkitP7-lfOBRJQuYdC9_z0lmRXDTmY\",\n\tauthDomain: \"crwn-db-cfbc4.firebaseapp.com\",\n\tdatabaseURL: \"https://crwn-db-cfbc4.firebaseio.com\",\n\tprojectId: \"crwn-db-cfbc4\",\n\tstorageBucket: \"crwn-db-cfbc4.appspot.com\",\n\tmessagingSenderId: \"248921421873\",\n\tappId: \"1:248921421873:web:4ada62056ad82ea4b8fd10\",\n};\n\nexport const createUserProfileDocument = async (userAuth, additonalData) => {\n\tif (!userAuth) return;\n\n\tconst userRef = firestore.doc(`users/${userAuth.uid}`);\n\n\tconst snapshot = await userRef.get();\n\n\tconsole.log(snapshot);\n\n\tif (!snapshot.exists) {\n\t\tconst { displayName, email } = userAuth;\n\t\tconst createdAt = new Date();\n\n\t\ttry {\n\t\t\tawait userRef.set({\n\t\t\t\tdisplayName,\n\t\t\t\temail,\n\t\t\t\tcreatedAt,\n\t\t\t\t...additonalData,\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tconsole.log(\"Error creating user\", err.message);\n\t\t}\n\t}\n\n\treturn userRef;\n};\n\nexport const addCollectionAndDocuments = async (\n\tcollectionKey,\n\tobjectsToAdd\n) => {\n\tconst collectionRef = firestore.collection(collectionKey);\n\n\tconst batch = firestore.batch();\n\n\tobjectsToAdd.forEach((obj) => {\n\t\tconst newDocRef = collectionRef.doc();\n\n\t\tbatch.set(newDocRef, obj);\n\t});\n\n\t// await batch.commit()\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: \"select_account\" });\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}